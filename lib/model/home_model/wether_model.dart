///
/// Code generated by Sita Web Tool https://sita.app/json-to-dart/
///
const String jsonKeyMaywetherforcastingModelLocation = 'location';
const String jsonKeyMaywetherforcastingModelCurrent = 'current';
const String jsonKeyMaywetherforcastingModelForecast = 'forecast';
const String jsonKeyMaywetherforcastingModelForecastForecastday = 'forecastday';
const String jsonKeyMaywetherforcastingModelForecastForecastdayDate = 'date';
const String jsonKeyMaywetherforcastingModelForecastForecastdayDate_epoch = 'date_epoch';
const String jsonKeyMaywetherforcastingModelForecastForecastdayDay = 'day';
const String jsonKeyMaywetherforcastingModelForecastForecastdayAstro = 'astro';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHour = 'hour';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourTime_epoch = 'time_epoch';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourTime = 'time';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourTemp_c = 'temp_c';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourTemp_f = 'temp_f';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourIs_day = 'is_day';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourCondition = 'condition';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourWind_mph = 'wind_mph';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourWind_kph = 'wind_kph';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourWind_degree = 'wind_degree';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourWind_dir = 'wind_dir';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourPressure_mb = 'pressure_mb';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourPressure_in = 'pressure_in';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourPrecip_mm = 'precip_mm';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourPrecip_in = 'precip_in';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourSnow_cm = 'snow_cm';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourHumidity = 'humidity';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourCloud = 'cloud';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourFeelslike_c = 'feelslike_c';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourFeelslike_f = 'feelslike_f';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourWindchill_c = 'windchill_c';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourWindchill_f = 'windchill_f';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourHeatindex_c = 'heatindex_c';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourHeatindex_f = 'heatindex_f';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourDewpoint_c = 'dewpoint_c';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourDewpoint_f = 'dewpoint_f';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourWill_it_rain = 'will_it_rain';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourChance_of_rain = 'chance_of_rain';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourWill_it_snow = 'will_it_snow';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourChance_of_snow = 'chance_of_snow';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourVis_km = 'vis_km';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourVis_miles = 'vis_miles';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourGust_mph = 'gust_mph';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourGust_kph = 'gust_kph';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourUv = 'uv';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourShort_rad = 'short_rad';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourDiff_rad = 'diff_rad';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourConditionText = 'text';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourConditionIcon = 'icon';
const String jsonKeyMaywetherforcastingModelForecastForecastdayHourConditionCode = 'code';
class MaywetherforcastingModelForecastForecastdayHourCondition {
/*
{
  "text": "Clear ",
  "icon": "//cdn.weatherapi.com/weather/64x64/night/113.png",
  "code": 1000
} 
*/

  String? text;
  String? icon;
  int? code;

  MaywetherforcastingModelForecastForecastdayHourCondition({
    this.text,
    this.icon,
    this.code,
  });
  MaywetherforcastingModelForecastForecastdayHourCondition.fromJson(Map<String, dynamic> json) {
    text = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourConditionText]?.toString();
    icon = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourConditionIcon]?.toString();
    code = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourConditionCode]?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourConditionText] = text;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourConditionIcon] = icon;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourConditionCode] = code;
    return data;
  }
}

class MaywetherforcastingModelForecastForecastdayHour {
/*
{
  "time_epoch": 1708367400,
  "time": "2024-02-20 00:00",
  "temp_c": 23.1,
  "temp_f": 73.5,
  "is_day": 0,
  "condition": {
    "text": "Clear ",
    "icon": "//cdn.weatherapi.com/weather/64x64/night/113.png",
    "code": 1000
  },
  "wind_mph": 5.6,
  "wind_kph": 9,
  "wind_degree": 235,
  "wind_dir": "SW",
  "pressure_mb": 1014,
  "pressure_in": 29.93,
  "precip_mm": 0,
  "precip_in": 0,
  "snow_cm": 0,
  "humidity": 73,
  "cloud": 0,
  "feelslike_c": 25.1,
  "feelslike_f": 77.1,
  "windchill_c": 23.1,
  "windchill_f": 73.5,
  "heatindex_c": 25.1,
  "heatindex_f": 77.1,
  "dewpoint_c": 17.9,
  "dewpoint_f": 64.3,
  "will_it_rain": 0,
  "chance_of_rain": 0,
  "will_it_snow": 0,
  "chance_of_snow": 0,
  "vis_km": 10,
  "vis_miles": 6,
  "gust_mph": 10.4,
  "gust_kph": 16.8,
  "uv": 1,
  "short_rad": 0,
  "diff_rad": 0
} 
*/

  int? time_epoch;
  String? time;
  double? temp_c;
  double? temp_f;
  int? is_day;
  MaywetherforcastingModelForecastForecastdayHourCondition? condition;
  double? wind_mph;
  int? wind_kph;
  int? wind_degree;
  String? wind_dir;
  int? pressure_mb;
  double? pressure_in;
  int? precip_mm;
  int? precip_in;
  int? snow_cm;
  int? humidity;
  int? cloud;
  double? feelslike_c;
  double? feelslike_f;
  double? windchill_c;
  double? windchill_f;
  double? heatindex_c;
  double? heatindex_f;
  double? dewpoint_c;
  double? dewpoint_f;
  int? will_it_rain;
  int? chance_of_rain;
  int? will_it_snow;
  int? chance_of_snow;
  int? vis_km;
  int? vis_miles;
  double? gust_mph;
  double? gust_kph;
  int? uv;
  int? short_rad;
  int? diff_rad;

  MaywetherforcastingModelForecastForecastdayHour({
    this.time_epoch,
    this.time,
    this.temp_c,
    this.temp_f,
    this.is_day,
    this.condition,
    this.wind_mph,
    this.wind_kph,
    this.wind_degree,
    this.wind_dir,
    this.pressure_mb,
    this.pressure_in,
    this.precip_mm,
    this.precip_in,
    this.snow_cm,
    this.humidity,
    this.cloud,
    this.feelslike_c,
    this.feelslike_f,
    this.windchill_c,
    this.windchill_f,
    this.heatindex_c,
    this.heatindex_f,
    this.dewpoint_c,
    this.dewpoint_f,
    this.will_it_rain,
    this.chance_of_rain,
    this.will_it_snow,
    this.chance_of_snow,
    this.vis_km,
    this.vis_miles,
    this.gust_mph,
    this.gust_kph,
    this.uv,
    this.short_rad,
    this.diff_rad,
  });
  MaywetherforcastingModelForecastForecastdayHour.fromJson(Map<String, dynamic> json) {
    time_epoch = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourTime_epoch]?.toInt();
    time = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourTime]?.toString();
    temp_c = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourTemp_c]?.toDouble();
    temp_f = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourTemp_f]?.toDouble();
    is_day = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourIs_day]?.toInt();
    condition = (json[jsonKeyMaywetherforcastingModelForecastForecastdayHourCondition] != null) ? MaywetherforcastingModelForecastForecastdayHourCondition.fromJson(json[jsonKeyMaywetherforcastingModelForecastForecastdayHourCondition]) : null;
    wind_mph = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourWind_mph]?.toDouble();
    wind_kph = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourWind_kph]?.toInt();
    wind_degree = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourWind_degree]?.toInt();
    wind_dir = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourWind_dir]?.toString();
    pressure_mb = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourPressure_mb]?.toInt();
    pressure_in = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourPressure_in]?.toDouble();
    precip_mm = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourPrecip_mm]?.toInt();
    precip_in = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourPrecip_in]?.toInt();
    snow_cm = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourSnow_cm]?.toInt();
    humidity = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourHumidity]?.toInt();
    cloud = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourCloud]?.toInt();
    feelslike_c = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourFeelslike_c]?.toDouble();
    feelslike_f = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourFeelslike_f]?.toDouble();
    windchill_c = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourWindchill_c]?.toDouble();
    windchill_f = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourWindchill_f]?.toDouble();
    heatindex_c = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourHeatindex_c]?.toDouble();
    heatindex_f = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourHeatindex_f]?.toDouble();
    dewpoint_c = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourDewpoint_c]?.toDouble();
    dewpoint_f = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourDewpoint_f]?.toDouble();
    will_it_rain = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourWill_it_rain]?.toInt();
    chance_of_rain = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourChance_of_rain]?.toInt();
    will_it_snow = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourWill_it_snow]?.toInt();
    chance_of_snow = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourChance_of_snow]?.toInt();
    vis_km = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourVis_km]?.toInt();
    vis_miles = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourVis_miles]?.toInt();
    gust_mph = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourGust_mph]?.toDouble();
    gust_kph = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourGust_kph]?.toDouble();
    uv = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourUv]?.toInt();
    short_rad = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourShort_rad]?.toInt();
    diff_rad = json[jsonKeyMaywetherforcastingModelForecastForecastdayHourDiff_rad]?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourTime_epoch] = time_epoch;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourTime] = time;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourTemp_c] = temp_c;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourTemp_f] = temp_f;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourIs_day] = is_day;
    if (condition != null) {
      data[jsonKeyMaywetherforcastingModelForecastForecastdayHourCondition] = condition!.toJson();
    }
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourWind_mph] = wind_mph;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourWind_kph] = wind_kph;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourWind_degree] = wind_degree;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourWind_dir] = wind_dir;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourPressure_mb] = pressure_mb;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourPressure_in] = pressure_in;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourPrecip_mm] = precip_mm;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourPrecip_in] = precip_in;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourSnow_cm] = snow_cm;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourHumidity] = humidity;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourCloud] = cloud;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourFeelslike_c] = feelslike_c;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourFeelslike_f] = feelslike_f;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourWindchill_c] = windchill_c;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourWindchill_f] = windchill_f;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourHeatindex_c] = heatindex_c;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourHeatindex_f] = heatindex_f;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourDewpoint_c] = dewpoint_c;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourDewpoint_f] = dewpoint_f;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourWill_it_rain] = will_it_rain;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourChance_of_rain] = chance_of_rain;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourWill_it_snow] = will_it_snow;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourChance_of_snow] = chance_of_snow;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourVis_km] = vis_km;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourVis_miles] = vis_miles;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourGust_mph] = gust_mph;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourGust_kph] = gust_kph;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourUv] = uv;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourShort_rad] = short_rad;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayHourDiff_rad] = diff_rad;
    return data;
  }
}

const String jsonKeyMaywetherforcastingModelForecastForecastdayAstroSunrise = 'sunrise';
const String jsonKeyMaywetherforcastingModelForecastForecastdayAstroSunset = 'sunset';
const String jsonKeyMaywetherforcastingModelForecastForecastdayAstroMoonrise = 'moonrise';
const String jsonKeyMaywetherforcastingModelForecastForecastdayAstroMoonset = 'moonset';
const String jsonKeyMaywetherforcastingModelForecastForecastdayAstroMoon_phase = 'moon_phase';
const String jsonKeyMaywetherforcastingModelForecastForecastdayAstroMoon_illumination = 'moon_illumination';
const String jsonKeyMaywetherforcastingModelForecastForecastdayAstroIs_moon_up = 'is_moon_up';
const String jsonKeyMaywetherforcastingModelForecastForecastdayAstroIs_sun_up = 'is_sun_up';
class MaywetherforcastingModelForecastForecastdayAstro {
/*
{
  "sunrise": "07:06 AM",
  "sunset": "06:39 PM",
  "moonrise": "03:05 PM",
  "moonset": "04:12 AM",
  "moon_phase": "Waxing Gibbous",
  "moon_illumination": 82,
  "is_moon_up": 0,
  "is_sun_up": 0
} 
*/

  String? sunrise;
  String? sunset;
  String? moonrise;
  String? moonset;
  String? moon_phase;
  int? moon_illumination;
  int? is_moon_up;
  int? is_sun_up;

  MaywetherforcastingModelForecastForecastdayAstro({
    this.sunrise,
    this.sunset,
    this.moonrise,
    this.moonset,
    this.moon_phase,
    this.moon_illumination,
    this.is_moon_up,
    this.is_sun_up,
  });
  MaywetherforcastingModelForecastForecastdayAstro.fromJson(Map<String, dynamic> json) {
    sunrise = json[jsonKeyMaywetherforcastingModelForecastForecastdayAstroSunrise]?.toString();
    sunset = json[jsonKeyMaywetherforcastingModelForecastForecastdayAstroSunset]?.toString();
    moonrise = json[jsonKeyMaywetherforcastingModelForecastForecastdayAstroMoonrise]?.toString();
    moonset = json[jsonKeyMaywetherforcastingModelForecastForecastdayAstroMoonset]?.toString();
    moon_phase = json[jsonKeyMaywetherforcastingModelForecastForecastdayAstroMoon_phase]?.toString();
    moon_illumination = json[jsonKeyMaywetherforcastingModelForecastForecastdayAstroMoon_illumination]?.toInt();
    is_moon_up = json[jsonKeyMaywetherforcastingModelForecastForecastdayAstroIs_moon_up]?.toInt();
    is_sun_up = json[jsonKeyMaywetherforcastingModelForecastForecastdayAstroIs_sun_up]?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data[jsonKeyMaywetherforcastingModelForecastForecastdayAstroSunrise] = sunrise;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayAstroSunset] = sunset;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayAstroMoonrise] = moonrise;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayAstroMoonset] = moonset;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayAstroMoon_phase] = moon_phase;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayAstroMoon_illumination] = moon_illumination;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayAstroIs_moon_up] = is_moon_up;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayAstroIs_sun_up] = is_sun_up;
    return data;
  }
}

const String jsonKeyMaywetherforcastingModelForecastForecastdayDayMaxtemp_c = 'maxtemp_c';
const String jsonKeyMaywetherforcastingModelForecastForecastdayDayMaxtemp_f = 'maxtemp_f';
const String jsonKeyMaywetherforcastingModelForecastForecastdayDayMintemp_c = 'mintemp_c';
const String jsonKeyMaywetherforcastingModelForecastForecastdayDayMintemp_f = 'mintemp_f';
const String jsonKeyMaywetherforcastingModelForecastForecastdayDayAvgtemp_c = 'avgtemp_c';
const String jsonKeyMaywetherforcastingModelForecastForecastdayDayAvgtemp_f = 'avgtemp_f';
const String jsonKeyMaywetherforcastingModelForecastForecastdayDayMaxwind_mph = 'maxwind_mph';
const String jsonKeyMaywetherforcastingModelForecastForecastdayDayMaxwind_kph = 'maxwind_kph';
const String jsonKeyMaywetherforcastingModelForecastForecastdayDayTotalprecip_mm = 'totalprecip_mm';
const String jsonKeyMaywetherforcastingModelForecastForecastdayDayTotalprecip_in = 'totalprecip_in';
const String jsonKeyMaywetherforcastingModelForecastForecastdayDayTotalsnow_cm = 'totalsnow_cm';
const String jsonKeyMaywetherforcastingModelForecastForecastdayDayAvgvis_km = 'avgvis_km';
const String jsonKeyMaywetherforcastingModelForecastForecastdayDayAvgvis_miles = 'avgvis_miles';
const String jsonKeyMaywetherforcastingModelForecastForecastdayDayAvghumidity = 'avghumidity';
const String jsonKeyMaywetherforcastingModelForecastForecastdayDayDaily_will_it_rain = 'daily_will_it_rain';
const String jsonKeyMaywetherforcastingModelForecastForecastdayDayDaily_chance_of_rain = 'daily_chance_of_rain';
const String jsonKeyMaywetherforcastingModelForecastForecastdayDayDaily_will_it_snow = 'daily_will_it_snow';
const String jsonKeyMaywetherforcastingModelForecastForecastdayDayDaily_chance_of_snow = 'daily_chance_of_snow';
const String jsonKeyMaywetherforcastingModelForecastForecastdayDayCondition = 'condition';
const String jsonKeyMaywetherforcastingModelForecastForecastdayDayUv = 'uv';
const String jsonKeyMaywetherforcastingModelForecastForecastdayDayConditionText = 'text';
const String jsonKeyMaywetherforcastingModelForecastForecastdayDayConditionIcon = 'icon';
const String jsonKeyMaywetherforcastingModelForecastForecastdayDayConditionCode = 'code';
class MaywetherforcastingModelForecastForecastdayDayCondition {
/*
{
  "text": "Sunny",
  "icon": "//cdn.weatherapi.com/weather/64x64/day/113.png",
  "code": 1000
} 
*/

  String? text;
  String? icon;
  int? code;

  MaywetherforcastingModelForecastForecastdayDayCondition({
    this.text,
    this.icon,
    this.code,
  });
  MaywetherforcastingModelForecastForecastdayDayCondition.fromJson(Map<String, dynamic> json) {
    text = json[jsonKeyMaywetherforcastingModelForecastForecastdayDayConditionText]?.toString();
    icon = json[jsonKeyMaywetherforcastingModelForecastForecastdayDayConditionIcon]?.toString();
    code = json[jsonKeyMaywetherforcastingModelForecastForecastdayDayConditionCode]?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data[jsonKeyMaywetherforcastingModelForecastForecastdayDayConditionText] = text;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayDayConditionIcon] = icon;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayDayConditionCode] = code;
    return data;
  }
}

class MaywetherforcastingModelForecastForecastdayDay {
/*
{
  "maxtemp_c": 29.4,
  "maxtemp_f": 85,
  "mintemp_c": 21.7,
  "mintemp_f": 71,
  "avgtemp_c": 24.9,
  "avgtemp_f": 76.8,
  "maxwind_mph": 11,
  "maxwind_kph": 17.6,
  "totalprecip_mm": 0,
  "totalprecip_in": 0,
  "totalsnow_cm": 0,
  "avgvis_km": 10,
  "avgvis_miles": 6,
  "avghumidity": 62,
  "daily_will_it_rain": 0,
  "daily_chance_of_rain": 0,
  "daily_will_it_snow": 0,
  "daily_chance_of_snow": 0,
  "condition": {
    "text": "Sunny",
    "icon": "//cdn.weatherapi.com/weather/64x64/day/113.png",
    "code": 1000
  },
  "uv": 9
} 
*/

  double? maxtemp_c;
  int? maxtemp_f;
  double? mintemp_c;
  int? mintemp_f;
  double? avgtemp_c;
  double? avgtemp_f;
  int? maxwind_mph;
  double? maxwind_kph;
  int? totalprecip_mm;
  int? totalprecip_in;
  int? totalsnow_cm;
  int? avgvis_km;
  int? avgvis_miles;
  int? avghumidity;
  int? daily_will_it_rain;
  int? daily_chance_of_rain;
  int? daily_will_it_snow;
  int? daily_chance_of_snow;
  MaywetherforcastingModelForecastForecastdayDayCondition? condition;
  int? uv;

  MaywetherforcastingModelForecastForecastdayDay({
    this.maxtemp_c,
    this.maxtemp_f,
    this.mintemp_c,
    this.mintemp_f,
    this.avgtemp_c,
    this.avgtemp_f,
    this.maxwind_mph,
    this.maxwind_kph,
    this.totalprecip_mm,
    this.totalprecip_in,
    this.totalsnow_cm,
    this.avgvis_km,
    this.avgvis_miles,
    this.avghumidity,
    this.daily_will_it_rain,
    this.daily_chance_of_rain,
    this.daily_will_it_snow,
    this.daily_chance_of_snow,
    this.condition,
    this.uv,
  });
  MaywetherforcastingModelForecastForecastdayDay.fromJson(Map<String, dynamic> json) {
    maxtemp_c = json[jsonKeyMaywetherforcastingModelForecastForecastdayDayMaxtemp_c]?.toDouble();
    maxtemp_f = json[jsonKeyMaywetherforcastingModelForecastForecastdayDayMaxtemp_f]?.toInt();
    mintemp_c = json[jsonKeyMaywetherforcastingModelForecastForecastdayDayMintemp_c]?.toDouble();
    mintemp_f = json[jsonKeyMaywetherforcastingModelForecastForecastdayDayMintemp_f]?.toInt();
    avgtemp_c = json[jsonKeyMaywetherforcastingModelForecastForecastdayDayAvgtemp_c]?.toDouble();
    avgtemp_f = json[jsonKeyMaywetherforcastingModelForecastForecastdayDayAvgtemp_f]?.toDouble();
    maxwind_mph = json[jsonKeyMaywetherforcastingModelForecastForecastdayDayMaxwind_mph]?.toInt();
    maxwind_kph = json[jsonKeyMaywetherforcastingModelForecastForecastdayDayMaxwind_kph]?.toDouble();
    totalprecip_mm = json[jsonKeyMaywetherforcastingModelForecastForecastdayDayTotalprecip_mm]?.toInt();
    totalprecip_in = json[jsonKeyMaywetherforcastingModelForecastForecastdayDayTotalprecip_in]?.toInt();
    totalsnow_cm = json[jsonKeyMaywetherforcastingModelForecastForecastdayDayTotalsnow_cm]?.toInt();
    avgvis_km = json[jsonKeyMaywetherforcastingModelForecastForecastdayDayAvgvis_km]?.toInt();
    avgvis_miles = json[jsonKeyMaywetherforcastingModelForecastForecastdayDayAvgvis_miles]?.toInt();
    avghumidity = json[jsonKeyMaywetherforcastingModelForecastForecastdayDayAvghumidity]?.toInt();
    daily_will_it_rain = json[jsonKeyMaywetherforcastingModelForecastForecastdayDayDaily_will_it_rain]?.toInt();
    daily_chance_of_rain = json[jsonKeyMaywetherforcastingModelForecastForecastdayDayDaily_chance_of_rain]?.toInt();
    daily_will_it_snow = json[jsonKeyMaywetherforcastingModelForecastForecastdayDayDaily_will_it_snow]?.toInt();
    daily_chance_of_snow = json[jsonKeyMaywetherforcastingModelForecastForecastdayDayDaily_chance_of_snow]?.toInt();
    condition = (json[jsonKeyMaywetherforcastingModelForecastForecastdayDayCondition] != null) ? MaywetherforcastingModelForecastForecastdayDayCondition.fromJson(json[jsonKeyMaywetherforcastingModelForecastForecastdayDayCondition]) : null;
    uv = json[jsonKeyMaywetherforcastingModelForecastForecastdayDayUv]?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data[jsonKeyMaywetherforcastingModelForecastForecastdayDayMaxtemp_c] = maxtemp_c;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayDayMaxtemp_f] = maxtemp_f;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayDayMintemp_c] = mintemp_c;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayDayMintemp_f] = mintemp_f;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayDayAvgtemp_c] = avgtemp_c;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayDayAvgtemp_f] = avgtemp_f;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayDayMaxwind_mph] = maxwind_mph;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayDayMaxwind_kph] = maxwind_kph;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayDayTotalprecip_mm] = totalprecip_mm;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayDayTotalprecip_in] = totalprecip_in;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayDayTotalsnow_cm] = totalsnow_cm;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayDayAvgvis_km] = avgvis_km;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayDayAvgvis_miles] = avgvis_miles;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayDayAvghumidity] = avghumidity;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayDayDaily_will_it_rain] = daily_will_it_rain;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayDayDaily_chance_of_rain] = daily_chance_of_rain;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayDayDaily_will_it_snow] = daily_will_it_snow;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayDayDaily_chance_of_snow] = daily_chance_of_snow;
    if (condition != null) {
      data[jsonKeyMaywetherforcastingModelForecastForecastdayDayCondition] = condition!.toJson();
    }
    data[jsonKeyMaywetherforcastingModelForecastForecastdayDayUv] = uv;
    return data;
  }
}

class MaywetherforcastingModelForecastForecastday {
/*
{
  "date": "2024-02-20",
  "date_epoch": 1708387200,
  "day": {
    "maxtemp_c": 29.4,
    "maxtemp_f": 85,
    "mintemp_c": 21.7,
    "mintemp_f": 71,
    "avgtemp_c": 24.9,
    "avgtemp_f": 76.8,
    "maxwind_mph": 11,
    "maxwind_kph": 17.6,
    "totalprecip_mm": 0,
    "totalprecip_in": 0,
    "totalsnow_cm": 0,
    "avgvis_km": 10,
    "avgvis_miles": 6,
    "avghumidity": 62,
    "daily_will_it_rain": 0,
    "daily_chance_of_rain": 0,
    "daily_will_it_snow": 0,
    "daily_chance_of_snow": 0,
    "condition": {
      "text": "Sunny",
      "icon": "//cdn.weatherapi.com/weather/64x64/day/113.png",
      "code": 1000
    },
    "uv": 9
  },
  "astro": {
    "sunrise": "07:06 AM",
    "sunset": "06:39 PM",
    "moonrise": "03:05 PM",
    "moonset": "04:12 AM",
    "moon_phase": "Waxing Gibbous",
    "moon_illumination": 82,
    "is_moon_up": 0,
    "is_sun_up": 0
  },
  "hour": [
    {
      "time_epoch": 1708367400,
      "time": "2024-02-20 00:00",
      "temp_c": 23.1,
      "temp_f": 73.5,
      "is_day": 0,
      "condition": {
        "text": "Clear ",
        "icon": "//cdn.weatherapi.com/weather/64x64/night/113.png",
        "code": 1000
      },
      "wind_mph": 5.6,
      "wind_kph": 9,
      "wind_degree": 235,
      "wind_dir": "SW",
      "pressure_mb": 1014,
      "pressure_in": 29.93,
      "precip_mm": 0,
      "precip_in": 0,
      "snow_cm": 0,
      "humidity": 73,
      "cloud": 0,
      "feelslike_c": 25.1,
      "feelslike_f": 77.1,
      "windchill_c": 23.1,
      "windchill_f": 73.5,
      "heatindex_c": 25.1,
      "heatindex_f": 77.1,
      "dewpoint_c": 17.9,
      "dewpoint_f": 64.3,
      "will_it_rain": 0,
      "chance_of_rain": 0,
      "will_it_snow": 0,
      "chance_of_snow": 0,
      "vis_km": 10,
      "vis_miles": 6,
      "gust_mph": 10.4,
      "gust_kph": 16.8,
      "uv": 1,
      "short_rad": 0,
      "diff_rad": 0
    }
  ]
} 
*/

  String? date;
  int? date_epoch;
  MaywetherforcastingModelForecastForecastdayDay? day;
  MaywetherforcastingModelForecastForecastdayAstro? astro;
  List<MaywetherforcastingModelForecastForecastdayHour?>? hour;

  MaywetherforcastingModelForecastForecastday({
    this.date,
    this.date_epoch,
    this.day,
    this.astro,
    this.hour,
  });
  MaywetherforcastingModelForecastForecastday.fromJson(Map<String, dynamic> json) {
    date = json[jsonKeyMaywetherforcastingModelForecastForecastdayDate]?.toString();
    date_epoch = json[jsonKeyMaywetherforcastingModelForecastForecastdayDate_epoch]?.toInt();
    day = (json[jsonKeyMaywetherforcastingModelForecastForecastdayDay] != null) ? MaywetherforcastingModelForecastForecastdayDay.fromJson(json[jsonKeyMaywetherforcastingModelForecastForecastdayDay]) : null;
    astro = (json[jsonKeyMaywetherforcastingModelForecastForecastdayAstro] != null) ? MaywetherforcastingModelForecastForecastdayAstro.fromJson(json[jsonKeyMaywetherforcastingModelForecastForecastdayAstro]) : null;
  if (json[jsonKeyMaywetherforcastingModelForecastForecastdayHour] != null) {
  final v = json[jsonKeyMaywetherforcastingModelForecastForecastdayHour];
  final arr0 = <MaywetherforcastingModelForecastForecastdayHour>[];
  v.forEach((v) {
  arr0.add(MaywetherforcastingModelForecastForecastdayHour.fromJson(v));
  });
    hour = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data[jsonKeyMaywetherforcastingModelForecastForecastdayDate] = date;
    data[jsonKeyMaywetherforcastingModelForecastForecastdayDate_epoch] = date_epoch;
    if (day != null) {
      data[jsonKeyMaywetherforcastingModelForecastForecastdayDay] = day!.toJson();
    }
    if (astro != null) {
      data[jsonKeyMaywetherforcastingModelForecastForecastdayAstro] = astro!.toJson();
    }
    if (hour != null) {
      final v = hour;
      final arr0 = [];
  v!.forEach((v) {
  arr0.add(v!.toJson());
  });
      data[jsonKeyMaywetherforcastingModelForecastForecastdayHour] = arr0;
    }
    return data;
  }
}

class MaywetherforcastingModelForecast {
/*
{
  "forecastday": [
    {
      "date": "2024-02-20",
      "date_epoch": 1708387200,
      "day": {
        "maxtemp_c": 29.4,
        "maxtemp_f": 85,
        "mintemp_c": 21.7,
        "mintemp_f": 71,
        "avgtemp_c": 24.9,
        "avgtemp_f": 76.8,
        "maxwind_mph": 11,
        "maxwind_kph": 17.6,
        "totalprecip_mm": 0,
        "totalprecip_in": 0,
        "totalsnow_cm": 0,
        "avgvis_km": 10,
        "avgvis_miles": 6,
        "avghumidity": 62,
        "daily_will_it_rain": 0,
        "daily_chance_of_rain": 0,
        "daily_will_it_snow": 0,
        "daily_chance_of_snow": 0,
        "condition": {
          "text": "Sunny",
          "icon": "//cdn.weatherapi.com/weather/64x64/day/113.png",
          "code": 1000
        },
        "uv": 9
      },
      "astro": {
        "sunrise": "07:06 AM",
        "sunset": "06:39 PM",
        "moonrise": "03:05 PM",
        "moonset": "04:12 AM",
        "moon_phase": "Waxing Gibbous",
        "moon_illumination": 82,
        "is_moon_up": 0,
        "is_sun_up": 0
      },
      "hour": [
        {
          "time_epoch": 1708367400,
          "time": "2024-02-20 00:00",
          "temp_c": 23.1,
          "temp_f": 73.5,
          "is_day": 0,
          "condition": {
            "text": "Clear ",
            "icon": "//cdn.weatherapi.com/weather/64x64/night/113.png",
            "code": 1000
          },
          "wind_mph": 5.6,
          "wind_kph": 9,
          "wind_degree": 235,
          "wind_dir": "SW",
          "pressure_mb": 1014,
          "pressure_in": 29.93,
          "precip_mm": 0,
          "precip_in": 0,
          "snow_cm": 0,
          "humidity": 73,
          "cloud": 0,
          "feelslike_c": 25.1,
          "feelslike_f": 77.1,
          "windchill_c": 23.1,
          "windchill_f": 73.5,
          "heatindex_c": 25.1,
          "heatindex_f": 77.1,
          "dewpoint_c": 17.9,
          "dewpoint_f": 64.3,
          "will_it_rain": 0,
          "chance_of_rain": 0,
          "will_it_snow": 0,
          "chance_of_snow": 0,
          "vis_km": 10,
          "vis_miles": 6,
          "gust_mph": 10.4,
          "gust_kph": 16.8,
          "uv": 1,
          "short_rad": 0,
          "diff_rad": 0
        }
      ]
    }
  ]
} 
*/

  List<MaywetherforcastingModelForecastForecastday?>? forecastday;

  MaywetherforcastingModelForecast({
    this.forecastday,
  });
  MaywetherforcastingModelForecast.fromJson(Map<String, dynamic> json) {
  if (json[jsonKeyMaywetherforcastingModelForecastForecastday] != null) {
  final v = json[jsonKeyMaywetherforcastingModelForecastForecastday];
  final arr0 = <MaywetherforcastingModelForecastForecastday>[];
  v.forEach((v) {
  arr0.add(MaywetherforcastingModelForecastForecastday.fromJson(v));
  });
    forecastday = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (forecastday != null) {
      final v = forecastday;
      final arr0 = [];
  v!.forEach((v) {
  arr0.add(v!.toJson());
  });
      data[jsonKeyMaywetherforcastingModelForecastForecastday] = arr0;
    }
    return data;
  }
}

const String jsonKeyMaywetherforcastingModelCurrentLast_updated_epoch = 'last_updated_epoch';
const String jsonKeyMaywetherforcastingModelCurrentLast_updated = 'last_updated';
const String jsonKeyMaywetherforcastingModelCurrentTemp_c = 'temp_c';
const String jsonKeyMaywetherforcastingModelCurrentTemp_f = 'temp_f';
const String jsonKeyMaywetherforcastingModelCurrentIs_day = 'is_day';
const String jsonKeyMaywetherforcastingModelCurrentCondition = 'condition';
const String jsonKeyMaywetherforcastingModelCurrentWind_mph = 'wind_mph';
const String jsonKeyMaywetherforcastingModelCurrentWind_kph = 'wind_kph';
const String jsonKeyMaywetherforcastingModelCurrentWind_degree = 'wind_degree';
const String jsonKeyMaywetherforcastingModelCurrentWind_dir = 'wind_dir';
const String jsonKeyMaywetherforcastingModelCurrentPressure_mb = 'pressure_mb';
const String jsonKeyMaywetherforcastingModelCurrentPressure_in = 'pressure_in';
const String jsonKeyMaywetherforcastingModelCurrentPrecip_mm = 'precip_mm';
const String jsonKeyMaywetherforcastingModelCurrentPrecip_in = 'precip_in';
const String jsonKeyMaywetherforcastingModelCurrentHumidity = 'humidity';
const String jsonKeyMaywetherforcastingModelCurrentCloud = 'cloud';
const String jsonKeyMaywetherforcastingModelCurrentFeelslike_c = 'feelslike_c';
const String jsonKeyMaywetherforcastingModelCurrentFeelslike_f = 'feelslike_f';
const String jsonKeyMaywetherforcastingModelCurrentVis_km = 'vis_km';
const String jsonKeyMaywetherforcastingModelCurrentVis_miles = 'vis_miles';
const String jsonKeyMaywetherforcastingModelCurrentUv = 'uv';
const String jsonKeyMaywetherforcastingModelCurrentGust_mph = 'gust_mph';
const String jsonKeyMaywetherforcastingModelCurrentGust_kph = 'gust_kph';
const String jsonKeyMaywetherforcastingModelCurrentConditionText = 'text';
const String jsonKeyMaywetherforcastingModelCurrentConditionIcon = 'icon';
const String jsonKeyMaywetherforcastingModelCurrentConditionCode = 'code';
class MaywetherforcastingModelCurrentCondition {
/*
{
  "text": "Sunny",
  "icon": "//cdn.weatherapi.com/weather/64x64/day/113.png",
  "code": 1000
} 
*/

  String? text;
  String? icon;
  int? code;

  MaywetherforcastingModelCurrentCondition({
    this.text,
    this.icon,
    this.code,
  });
  MaywetherforcastingModelCurrentCondition.fromJson(Map<String, dynamic> json) {
    text = json[jsonKeyMaywetherforcastingModelCurrentConditionText]?.toString();
    icon = json[jsonKeyMaywetherforcastingModelCurrentConditionIcon]?.toString();
    code = json[jsonKeyMaywetherforcastingModelCurrentConditionCode]?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data[jsonKeyMaywetherforcastingModelCurrentConditionText] = text;
    data[jsonKeyMaywetherforcastingModelCurrentConditionIcon] = icon;
    data[jsonKeyMaywetherforcastingModelCurrentConditionCode] = code;
    return data;
  }
}

class MaywetherforcastingModelCurrent {
/*
{
  "last_updated_epoch": 1708424100,
  "last_updated": "2024-02-20 15:45",
  "temp_c": 28.9,
  "temp_f": 84,
  "is_day": 1,
  "condition": {
    "text": "Sunny",
    "icon": "//cdn.weatherapi.com/weather/64x64/day/113.png",
    "code": 1000
  },
  "wind_mph": 11,
  "wind_kph": 17.6,
  "wind_degree": 273,
  "wind_dir": "W",
  "pressure_mb": 1011,
  "pressure_in": 29.87,
  "precip_mm": 0,
  "precip_in": 0,
  "humidity": 37,
  "cloud": 0,
  "feelslike_c": 28.4,
  "feelslike_f": 83.2,
  "vis_km": 10,
  "vis_miles": 6,
  "uv": 7,
  "gust_mph": 12.6,
  "gust_kph": 20.3
} 
*/

  int? last_updated_epoch;
  String? last_updated;
  double? temp_c;
  int? temp_f;
  int? is_day;
  MaywetherforcastingModelCurrentCondition? condition;
  int? wind_mph;
  double? wind_kph;
  int? wind_degree;
  String? wind_dir;
  int? pressure_mb;
  double? pressure_in;
  int? precip_mm;
  int? precip_in;
  int? humidity;
  int? cloud;
  double? feelslike_c;
  double? feelslike_f;
  int? vis_km;
  int? vis_miles;
  int? uv;
  double? gust_mph;
  double? gust_kph;

  MaywetherforcastingModelCurrent({
    this.last_updated_epoch,
    this.last_updated,
    this.temp_c,
    this.temp_f,
    this.is_day,
    this.condition,
    this.wind_mph,
    this.wind_kph,
    this.wind_degree,
    this.wind_dir,
    this.pressure_mb,
    this.pressure_in,
    this.precip_mm,
    this.precip_in,
    this.humidity,
    this.cloud,
    this.feelslike_c,
    this.feelslike_f,
    this.vis_km,
    this.vis_miles,
    this.uv,
    this.gust_mph,
    this.gust_kph,
  });
  MaywetherforcastingModelCurrent.fromJson(Map<String, dynamic> json) {
    last_updated_epoch = json[jsonKeyMaywetherforcastingModelCurrentLast_updated_epoch]?.toInt();
    last_updated = json[jsonKeyMaywetherforcastingModelCurrentLast_updated]?.toString();
    temp_c = json[jsonKeyMaywetherforcastingModelCurrentTemp_c]?.toDouble();
    temp_f = json[jsonKeyMaywetherforcastingModelCurrentTemp_f]?.toInt();
    is_day = json[jsonKeyMaywetherforcastingModelCurrentIs_day]?.toInt();
    condition = (json[jsonKeyMaywetherforcastingModelCurrentCondition] != null) ? MaywetherforcastingModelCurrentCondition.fromJson(json[jsonKeyMaywetherforcastingModelCurrentCondition]) : null;
    wind_mph = json[jsonKeyMaywetherforcastingModelCurrentWind_mph]?.toInt();
    wind_kph = json[jsonKeyMaywetherforcastingModelCurrentWind_kph]?.toDouble();
    wind_degree = json[jsonKeyMaywetherforcastingModelCurrentWind_degree]?.toInt();
    wind_dir = json[jsonKeyMaywetherforcastingModelCurrentWind_dir]?.toString();
    pressure_mb = json[jsonKeyMaywetherforcastingModelCurrentPressure_mb]?.toInt();
    pressure_in = json[jsonKeyMaywetherforcastingModelCurrentPressure_in]?.toDouble();
    precip_mm = json[jsonKeyMaywetherforcastingModelCurrentPrecip_mm]?.toInt();
    precip_in = json[jsonKeyMaywetherforcastingModelCurrentPrecip_in]?.toInt();
    humidity = json[jsonKeyMaywetherforcastingModelCurrentHumidity]?.toInt();
    cloud = json[jsonKeyMaywetherforcastingModelCurrentCloud]?.toInt();
    feelslike_c = json[jsonKeyMaywetherforcastingModelCurrentFeelslike_c]?.toDouble();
    feelslike_f = json[jsonKeyMaywetherforcastingModelCurrentFeelslike_f]?.toDouble();
    vis_km = json[jsonKeyMaywetherforcastingModelCurrentVis_km]?.toInt();
    vis_miles = json[jsonKeyMaywetherforcastingModelCurrentVis_miles]?.toInt();
    uv = json[jsonKeyMaywetherforcastingModelCurrentUv]?.toInt();
    gust_mph = json[jsonKeyMaywetherforcastingModelCurrentGust_mph]?.toDouble();
    gust_kph = json[jsonKeyMaywetherforcastingModelCurrentGust_kph]?.toDouble();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data[jsonKeyMaywetherforcastingModelCurrentLast_updated_epoch] = last_updated_epoch;
    data[jsonKeyMaywetherforcastingModelCurrentLast_updated] = last_updated;
    data[jsonKeyMaywetherforcastingModelCurrentTemp_c] = temp_c;
    data[jsonKeyMaywetherforcastingModelCurrentTemp_f] = temp_f;
    data[jsonKeyMaywetherforcastingModelCurrentIs_day] = is_day;
    if (condition != null) {
      data[jsonKeyMaywetherforcastingModelCurrentCondition] = condition!.toJson();
    }
    data[jsonKeyMaywetherforcastingModelCurrentWind_mph] = wind_mph;
    data[jsonKeyMaywetherforcastingModelCurrentWind_kph] = wind_kph;
    data[jsonKeyMaywetherforcastingModelCurrentWind_degree] = wind_degree;
    data[jsonKeyMaywetherforcastingModelCurrentWind_dir] = wind_dir;
    data[jsonKeyMaywetherforcastingModelCurrentPressure_mb] = pressure_mb;
    data[jsonKeyMaywetherforcastingModelCurrentPressure_in] = pressure_in;
    data[jsonKeyMaywetherforcastingModelCurrentPrecip_mm] = precip_mm;
    data[jsonKeyMaywetherforcastingModelCurrentPrecip_in] = precip_in;
    data[jsonKeyMaywetherforcastingModelCurrentHumidity] = humidity;
    data[jsonKeyMaywetherforcastingModelCurrentCloud] = cloud;
    data[jsonKeyMaywetherforcastingModelCurrentFeelslike_c] = feelslike_c;
    data[jsonKeyMaywetherforcastingModelCurrentFeelslike_f] = feelslike_f;
    data[jsonKeyMaywetherforcastingModelCurrentVis_km] = vis_km;
    data[jsonKeyMaywetherforcastingModelCurrentVis_miles] = vis_miles;
    data[jsonKeyMaywetherforcastingModelCurrentUv] = uv;
    data[jsonKeyMaywetherforcastingModelCurrentGust_mph] = gust_mph;
    data[jsonKeyMaywetherforcastingModelCurrentGust_kph] = gust_kph;
    return data;
  }
}

const String jsonKeyMaywetherforcastingModelLocationName = 'name';
const String jsonKeyMaywetherforcastingModelLocationRegion = 'region';
const String jsonKeyMaywetherforcastingModelLocationCountry = 'country';
const String jsonKeyMaywetherforcastingModelLocationLat = 'lat';
const String jsonKeyMaywetherforcastingModelLocationLon = 'lon';
const String jsonKeyMaywetherforcastingModelLocationTz_id = 'tz_id';
const String jsonKeyMaywetherforcastingModelLocationLocaltime_epoch = 'localtime_epoch';
const String jsonKeyMaywetherforcastingModelLocationLocaltime = 'localtime';
class MaywetherforcastingModelLocation {
/*
{
  "name": "Dadra",
  "region": "Dadra and Nagar Haveli",
  "country": "India",
  "lat": 20.32,
  "lon": 72.97,
  "tz_id": "Asia/Kolkata",
  "localtime_epoch": 1708424324,
  "localtime": "2024-02-20 15:48"
} 
*/

  String? name;
  String? region;
  String? country;
  double? lat;
  double? lon;
  String? tz_id;
  int? localtime_epoch;
  String? localtime;

  MaywetherforcastingModelLocation({
    this.name,
    this.region,
    this.country,
    this.lat,
    this.lon,
    this.tz_id,
    this.localtime_epoch,
    this.localtime,
  });
  MaywetherforcastingModelLocation.fromJson(Map<String, dynamic> json) {
    name = json[jsonKeyMaywetherforcastingModelLocationName]?.toString();
    region = json[jsonKeyMaywetherforcastingModelLocationRegion]?.toString();
    country = json[jsonKeyMaywetherforcastingModelLocationCountry]?.toString();
    lat = json[jsonKeyMaywetherforcastingModelLocationLat]?.toDouble();
    lon = json[jsonKeyMaywetherforcastingModelLocationLon]?.toDouble();
    tz_id = json[jsonKeyMaywetherforcastingModelLocationTz_id]?.toString();
    localtime_epoch = json[jsonKeyMaywetherforcastingModelLocationLocaltime_epoch]?.toInt();
    localtime = json[jsonKeyMaywetherforcastingModelLocationLocaltime]?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data[jsonKeyMaywetherforcastingModelLocationName] = name;
    data[jsonKeyMaywetherforcastingModelLocationRegion] = region;
    data[jsonKeyMaywetherforcastingModelLocationCountry] = country;
    data[jsonKeyMaywetherforcastingModelLocationLat] = lat;
    data[jsonKeyMaywetherforcastingModelLocationLon] = lon;
    data[jsonKeyMaywetherforcastingModelLocationTz_id] = tz_id;
    data[jsonKeyMaywetherforcastingModelLocationLocaltime_epoch] = localtime_epoch;
    data[jsonKeyMaywetherforcastingModelLocationLocaltime] = localtime;
    return data;
  }
}

class MaywetherforcastingModel {
/*
{
  "location": {
    "name": "Dadra",
    "region": "Dadra and Nagar Haveli",
    "country": "India",
    "lat": 20.32,
    "lon": 72.97,
    "tz_id": "Asia/Kolkata",
    "localtime_epoch": 1708424324,
    "localtime": "2024-02-20 15:48"
  },
  "current": {
    "last_updated_epoch": 1708424100,
    "last_updated": "2024-02-20 15:45",
    "temp_c": 28.9,
    "temp_f": 84,
    "is_day": 1,
    "condition": {
      "text": "Sunny",
      "icon": "//cdn.weatherapi.com/weather/64x64/day/113.png",
      "code": 1000
    },
    "wind_mph": 11,
    "wind_kph": 17.6,
    "wind_degree": 273,
    "wind_dir": "W",
    "pressure_mb": 1011,
    "pressure_in": 29.87,
    "precip_mm": 0,
    "precip_in": 0,
    "humidity": 37,
    "cloud": 0,
    "feelslike_c": 28.4,
    "feelslike_f": 83.2,
    "vis_km": 10,
    "vis_miles": 6,
    "uv": 7,
    "gust_mph": 12.6,
    "gust_kph": 20.3
  },
  "forecast": {
    "forecastday": [
      {
        "date": "2024-02-20",
        "date_epoch": 1708387200,
        "day": {
          "maxtemp_c": 29.4,
          "maxtemp_f": 85,
          "mintemp_c": 21.7,
          "mintemp_f": 71,
          "avgtemp_c": 24.9,
          "avgtemp_f": 76.8,
          "maxwind_mph": 11,
          "maxwind_kph": 17.6,
          "totalprecip_mm": 0,
          "totalprecip_in": 0,
          "totalsnow_cm": 0,
          "avgvis_km": 10,
          "avgvis_miles": 6,
          "avghumidity": 62,
          "daily_will_it_rain": 0,
          "daily_chance_of_rain": 0,
          "daily_will_it_snow": 0,
          "daily_chance_of_snow": 0,
          "condition": {
            "text": "Sunny",
            "icon": "//cdn.weatherapi.com/weather/64x64/day/113.png",
            "code": 1000
          },
          "uv": 9
        },
        "astro": {
          "sunrise": "07:06 AM",
          "sunset": "06:39 PM",
          "moonrise": "03:05 PM",
          "moonset": "04:12 AM",
          "moon_phase": "Waxing Gibbous",
          "moon_illumination": 82,
          "is_moon_up": 0,
          "is_sun_up": 0
        },
        "hour": [
          {
            "time_epoch": 1708367400,
            "time": "2024-02-20 00:00",
            "temp_c": 23.1,
            "temp_f": 73.5,
            "is_day": 0,
            "condition": {
              "text": "Clear ",
              "icon": "//cdn.weatherapi.com/weather/64x64/night/113.png",
              "code": 1000
            },
            "wind_mph": 5.6,
            "wind_kph": 9,
            "wind_degree": 235,
            "wind_dir": "SW",
            "pressure_mb": 1014,
            "pressure_in": 29.93,
            "precip_mm": 0,
            "precip_in": 0,
            "snow_cm": 0,
            "humidity": 73,
            "cloud": 0,
            "feelslike_c": 25.1,
            "feelslike_f": 77.1,
            "windchill_c": 23.1,
            "windchill_f": 73.5,
            "heatindex_c": 25.1,
            "heatindex_f": 77.1,
            "dewpoint_c": 17.9,
            "dewpoint_f": 64.3,
            "will_it_rain": 0,
            "chance_of_rain": 0,
            "will_it_snow": 0,
            "chance_of_snow": 0,
            "vis_km": 10,
            "vis_miles": 6,
            "gust_mph": 10.4,
            "gust_kph": 16.8,
            "uv": 1,
            "short_rad": 0,
            "diff_rad": 0
          }
        ]
      }
    ]
  }
} 
*/

  MaywetherforcastingModelLocation? location;
  MaywetherforcastingModelCurrent? current;
  MaywetherforcastingModelForecast? forecast;

  MaywetherforcastingModel({
    this.location,
    this.current,
    this.forecast,
  });
  MaywetherforcastingModel.fromJson(Map<String, dynamic> json) {
    location = (json[jsonKeyMaywetherforcastingModelLocation] != null) ? MaywetherforcastingModelLocation.fromJson(json[jsonKeyMaywetherforcastingModelLocation]) : null;
    current = (json[jsonKeyMaywetherforcastingModelCurrent] != null) ? MaywetherforcastingModelCurrent.fromJson(json[jsonKeyMaywetherforcastingModelCurrent]) : null;
    forecast = (json[jsonKeyMaywetherforcastingModelForecast] != null) ? MaywetherforcastingModelForecast.fromJson(json[jsonKeyMaywetherforcastingModelForecast]) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (location != null) {
      data[jsonKeyMaywetherforcastingModelLocation] = location!.toJson();
    }
    if (current != null) {
      data[jsonKeyMaywetherforcastingModelCurrent] = current!.toJson();
    }
    if (forecast != null) {
      data[jsonKeyMaywetherforcastingModelForecast] = forecast!.toJson();
    }
    return data;
  }
}
