///
/// Code generated by Sita Web Tool https://sita.app/json-to-dart/
///
class NutrientManagementModelDATA1 {
/*
{
  "Column1": 1
} 
*/

  String? Column1;

  NutrientManagementModelDATA1({
    this.Column1,
  });
  NutrientManagementModelDATA1.fromJson(Map<String, dynamic> json) {
    Column1 = json['Column1']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['Column1'] = Column1;
    return data;
  }
}

class NutrientManagementModelDATA {
/*
{
  "RR_ID": 335,
  "Row": 1,
  "REPORT_ID": "2",
  "USER_ID": "19",
  "PLOT_ID": "224",
  "CROP_ID": "22",
  "LAB_NAME": "okok",
  "DESCRIPTION": "ok",
  "NITROGEN": 5,
  "PHOSFORUS": 5,
  "POTASIUM": 5,
  "CALSIUM": 5,
  "MAGNESIUM": 5,
  "SALPHUR": 5,
  "FEROUS": 5,
  "MANGNISE": 0,
  "ZINK": 5,
  "BORON": 5,
  "EC": 0,
  "PH": 0,
  "CARBON": 0,
  "MOLIBHEBAM": 5,
  "REPORT_PHOTO": "",
  "STATUS": "Active",
  "SAMPLE_DATE": "26/04/2023 ",
  "CHATANI_REPORT_DATE": "31/03/2023 ",
  "CROP_NAME": "उस",
  "REPORT_NAME": "Patoile Report",
  "REG_DATE": "26/04/2023 ",
  "TOTAL_RECORD": "<b>Chuna:</b>0 (किलो)\n \n <br> <b>Sulpher: </b>40 (किलो) \n <br> <b>Gypsum:</b> 0 (किलो)\n <br> <b>Phosphoric acid:</b> 5 (किलो)\n<br> <b>Sulfuric acid:</b> 1 (किलो)\n <br><b> Mulching:</b> Mulching\n<br> <b>Shen Khat:</b> 20 MT \n<br><b> बोनमिल / अँग्रीफीड:</b>500 (Kg) \n<br> <b>Urea:</b> 30 (किलो)\n <br> <b>DAP:</b> 60 (किलो)\n<br> <b>24:24:00 :</b> 50 (किलो)\n<br><b> Calcium nitrate:</b> 55 (किलो)\n<br> <b>Superphosphate:</b> 300 (किलो)\n<br> <b>12:61 :</b> 40 (किलो)\n<br> <b>0:52:34 : </b>30 (किलो)\n<br> <b>SOP:</b> 60 (किलो)\n <br><b>13:00:45 :</b> 40 (किलो)\n<br><b> 0:00:50 :</b> 100 (किलो) \n<br><b> Magnesium sulphate:</b>  70 (किलो) \n<br> <b>Ferrous sulfate:</b> 20 (किलो)\n<br><b> EDDHA Fe:</b> 2.5 (किलो)\n<br> <b>EDTA Fe:</b> 3 (किलो)\n<br><b> Zinc sulfate:</b> 10 (किलो)\n<br><b> Chi-Zink:</b> 1.5 (किलो)\n<br> <b>Boric Acid:</b> 0.5 (किलो)\n<br> <b>Chi-Boron:</b> 0.1 ग्रॅम \n<br>  <b>Manganese Sulphate:</b> 5 (किलो)\n <br><b>Chi-Manganese :</b> 3 (किलो)",
  "TOTAL_RECORD1": "<b><span style=color:#e74c3c><u>छाटणी अगोदर १५ दिवस :</u></span></b>  \n\n <br> <b>बोनोमील/ अग्रीफिड :</b> 500 (किलो)  ड्रीपखाली \n<br> <b>शेणखत :</b>  20 MT   ड्रीपखाली \n<br><b> Superphosphate: </b>300 (किलो ) ड्रीपखाली \n<br><b> Sulphur: </b>40 (किलो ) ड्रीपखाली \n<br> <b>DAP :</b> 15 (किलो ) ड्रीपखाली \n<br> <b>SOP :</b> 15 (किलो) ड्रीपखाली  \n<br> <b>Calcium Nitrate:</b> 11 (किलो) ड्रीपने  \n<br> <b>Chuna:</b> 0 (किलो) \n<br><b>Gypsum:</b> 0 (किलो) \n<br> <hr> <b><span style=color:#e74c3c><u>छाटणी ते ३० दिवस :</u></span></b> \n\n<br> <b>Magnesium Sulphate:</b> प्रत्येकी 11.67 किलो * ३ वेळा ड्रीपने \n<br> <b>Calcium Nitrate:</b> 16.5 (किलो) ड्रीपने \n<br><b> DAP:</b>  15 (किलो ) ड्रीपखाली \n<br> <b>युरिया :</b> 6  (किलो) ड्रीपने \n <br><b>Ferrous Sulphate:</b> 6 (किलो) ड्रीप ने \n<br><b> EDDHA  Ferrous:</b> 1.25 (किलो) ड्रीप ने \n<br><b> EDTA Ferrous:</b> 0.9 (किलो) ड्रीप ने \n<br><b> Zinc Sulphate:</b> 3 (किलो) ड्रीप ने \n<br> <b>Chi. Zinc:</b> 0.45 (किलो) ड्रीप ने \n<br><b> Boric Acide:</b> 0.15 (किलो) ड्रीप ने \n<br> <b>ची.बोरान :</b> 0.1 kg\n<br> <b> Manganese Sulphate:</b> 1.5 (किलो) ड्रीप ने \n<br> <b>Chi . Manganese:</b> 1Kg ड्रीप ने \n <br><hr> <b><span style=color:#e74c3c><u>३१ ते ६० दिवस :</u></span> </b>\n\n<br> <b>DAP :</b> 15 (किलो) ड्रीप खाली \n <br><b>१२.६१.० :</b>प्रत्येकी  10 किलो * 4 वेळा ड्रीप खाली  \n<br><b> 0.52.34 : </b> 15 (किलो) ड्रीप खाली \n<br><b> Calcium Nitrate:</b> 13.75 (किलो) ड्रीप ने \n<br> <b>Magnesium Sulphate:</b> 28 (किलो) ड्रीप ने \n<br><b> Ferrous Sulphate:</b> 10 (किलो) ड्रीप ने \n<br><b> EDDHA  Ferrous:</b> 1.25  (किलो) ड्रीप ने \n<br> <b>EDTA Ferrous:</b>1.5 (किलो)  ड्रीप ने \n<br><b> Zinc Sulphate: </b>5 ड्रीप ने \n <br><b>Chi. Zinc: </b>0.75 (किलो) ड्रीप ने \n<br> <b>Boric Acide:</b> 0.25 (किलो) ड्रीप ने \n<br><b> ची.बोरान :</b> 0.1 kg\n<br> <b>Manganese Sulphate:</b> 2.5 (किलो) ड्रीप ने \n<br><b> Chi . Manganese: </b>1.5 (किलो) ड्रीप ने \n <br><hr>  <b><span style=color:#e74c3c><u>६१  ते ९० दिवस :</u></span></b> \n\n<br> <b>SOP:</b> 15 (किलो) ड्रीप खाली \n<br> <b>DAP :</b> 15 (किलो) ड्रीप खाली \n<br> <b>शेंगदाणा पेंड  :</b> 500 (किलो) 100% \n <br><b>0.52.34 :</b>  15 (किलो) ड्रीप खाली \n<br> <b>13:00:45 :</b> प्रत्येकी 13.33 किलो * ३ वेळा \n<br> <b>Calcium Nitrate:</b> 13.75 (किलो) ड्रीप ने \n<br> <b>Magnesium Sulphate:</b> 7 (किलो) ड्रीप ने \n<br> <b>Ferrous Sulphate:</b> 4 (किलो) ड्रीप ने \n<br> <b>EDDHA  Ferrous:</b> 0.5 (किलो) ड्रीप ने \n<br> <b>EDTA Ferrous:</b>0.6 (किलो)  ड्रीप ने \n<br> <b>Zinc Sulphate:</b> 2 ड्रीप ने \n<br> <b>Chi. Zinc:</b> 0.3 (किलो) ड्रीप ने \n<br> <b>Boric Acide:</b> 0.1 (किलो) ड्रीप ने \n<br> <b>Manganese Sulphate:</b> 1 (किलो) ड्रीप ने \n<br> <b>Chi . Manganese:</b> 0.6 (किलो) ड्रीप ने \n<br><hr>  <b><span style=color:#e74c3c><u>९१  ते १२० दिवस :</u></span> </b>  \n\n <br><b>SOP:</b> 30 (किलो) ड्रीप खाली \n<br><b> 0:00:50 :</b>  प्रत्येकी 20 किलो * ५ वेळा <br>",
  "NitrateNitrogen": 0,
  "AmmonicalNitrogen": 0,
  "Copper": 0,
  "Chloride": 0,
  "Sodium": 0,
  "CalciumCarbonate": 0,
  "OrganicCarbon": 0,
  "BiCarbonate": 0,
  "Carbonate": 0,
  "Mgca": 0,
  "SAR": 0
} 
*/

  String? RR_ID;
  String? Row;
  String? REPORT_ID;
  String? USER_ID;
  String? PLOT_ID;
  String? CROP_ID;
  String? LAB_NAME;
  String? DESCRIPTION;
  String? NITROGEN;
  String? PHOSFORUS;
  String? POTASIUM;
  String? CALSIUM;
  String? MAGNESIUM;
  String? SALPHUR;
  String? FEROUS;
  String? MANGNISE;
  String? ZINK;
  String? BORON;
  String? EC;
  String? PH;
  String? CARBON;
  String? MOLIBHEBAM;
  String? REPORT_PHOTO;
  String? STATUS;
  String? SAMPLE_DATE;
  String? CHATANI_REPORT_DATE;
  String? CROP_NAME;
  String? REPORT_NAME;
  String? REG_DATE;
  String? TOTAL_RECORD;
  String? TOTAL_RECORD1;
  String? NitrateNitrogen;
  String? AmmonicalNitrogen;
  String? Copper;
  String? Chloride;
  String? Sodium;
  String? CalciumCarbonate;
  String? OrganicCarbon;
  String? BiCarbonate;
  String? Carbonate;
  String? Mgca;
  String? SAR;

  NutrientManagementModelDATA({
    this.RR_ID,
    this.Row,
    this.REPORT_ID,
    this.USER_ID,
    this.PLOT_ID,
    this.CROP_ID,
    this.LAB_NAME,
    this.DESCRIPTION,
    this.NITROGEN,
    this.PHOSFORUS,
    this.POTASIUM,
    this.CALSIUM,
    this.MAGNESIUM,
    this.SALPHUR,
    this.FEROUS,
    this.MANGNISE,
    this.ZINK,
    this.BORON,
    this.EC,
    this.PH,
    this.CARBON,
    this.MOLIBHEBAM,
    this.REPORT_PHOTO,
    this.STATUS,
    this.SAMPLE_DATE,
    this.CHATANI_REPORT_DATE,
    this.CROP_NAME,
    this.REPORT_NAME,
    this.REG_DATE,
    this.TOTAL_RECORD,
    this.TOTAL_RECORD1,
    this.NitrateNitrogen,
    this.AmmonicalNitrogen,
    this.Copper,
    this.Chloride,
    this.Sodium,
    this.CalciumCarbonate,
    this.OrganicCarbon,
    this.BiCarbonate,
    this.Carbonate,
    this.Mgca,
    this.SAR,
  });
  NutrientManagementModelDATA.fromJson(Map<String, dynamic> json) {
    RR_ID = json['RR_ID']?.toString();
    Row = json['Row']?.toString();
    REPORT_ID = json['REPORT_ID']?.toString();
    USER_ID = json['USER_ID']?.toString();
    PLOT_ID = json['PLOT_ID']?.toString();
    CROP_ID = json['CROP_ID']?.toString();
    LAB_NAME = json['LAB_NAME']?.toString();
    DESCRIPTION = json['DESCRIPTION']?.toString();
    NITROGEN = json['NITROGEN']?.toString();
    PHOSFORUS = json['PHOSFORUS']?.toString();
    POTASIUM = json['POTASIUM']?.toString();
    CALSIUM = json['CALSIUM']?.toString();
    MAGNESIUM = json['MAGNESIUM']?.toString();
    SALPHUR = json['SALPHUR']?.toString();
    FEROUS = json['FEROUS']?.toString();
    MANGNISE = json['MANGNISE']?.toString();
    ZINK = json['ZINK']?.toString();
    BORON = json['BORON']?.toString();
    EC = json['EC']?.toString();
    PH = json['PH']?.toString();
    CARBON = json['CARBON']?.toString();
    MOLIBHEBAM = json['MOLIBHEBAM']?.toString();
    REPORT_PHOTO = json['REPORT_PHOTO']?.toString();
    STATUS = json['STATUS']?.toString();
    SAMPLE_DATE = json['SAMPLE_DATE']?.toString();
    CHATANI_REPORT_DATE = json['CHATANI_REPORT_DATE']?.toString();
    CROP_NAME = json['CROP_NAME']?.toString();
    REPORT_NAME = json['REPORT_NAME']?.toString();
    REG_DATE = json['REG_DATE']?.toString();
    TOTAL_RECORD = json['TOTAL_RECORD']?.toString();
    TOTAL_RECORD1 = json['TOTAL_RECORD1']?.toString();
    NitrateNitrogen = json['NitrateNitrogen']?.toString();
    AmmonicalNitrogen = json['AmmonicalNitrogen']?.toString();
    Copper = json['Copper']?.toString();
    Chloride = json['Chloride']?.toString();
    Sodium = json['Sodium']?.toString();
    CalciumCarbonate = json['CalciumCarbonate']?.toString();
    OrganicCarbon = json['OrganicCarbon']?.toString();
    BiCarbonate = json['BiCarbonate']?.toString();
    Carbonate = json['Carbonate']?.toString();
    Mgca = json['Mgca']?.toString();
    SAR = json['SAR']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['RR_ID'] = RR_ID;
    data['Row'] = Row;
    data['REPORT_ID'] = REPORT_ID;
    data['USER_ID'] = USER_ID;
    data['PLOT_ID'] = PLOT_ID;
    data['CROP_ID'] = CROP_ID;
    data['LAB_NAME'] = LAB_NAME;
    data['DESCRIPTION'] = DESCRIPTION;
    data['NITROGEN'] = NITROGEN;
    data['PHOSFORUS'] = PHOSFORUS;
    data['POTASIUM'] = POTASIUM;
    data['CALSIUM'] = CALSIUM;
    data['MAGNESIUM'] = MAGNESIUM;
    data['SALPHUR'] = SALPHUR;
    data['FEROUS'] = FEROUS;
    data['MANGNISE'] = MANGNISE;
    data['ZINK'] = ZINK;
    data['BORON'] = BORON;
    data['EC'] = EC;
    data['PH'] = PH;
    data['CARBON'] = CARBON;
    data['MOLIBHEBAM'] = MOLIBHEBAM;
    data['REPORT_PHOTO'] = REPORT_PHOTO;
    data['STATUS'] = STATUS;
    data['SAMPLE_DATE'] = SAMPLE_DATE;
    data['CHATANI_REPORT_DATE'] = CHATANI_REPORT_DATE;
    data['CROP_NAME'] = CROP_NAME;
    data['REPORT_NAME'] = REPORT_NAME;
    data['REG_DATE'] = REG_DATE;
    data['TOTAL_RECORD'] = TOTAL_RECORD;
    data['TOTAL_RECORD1'] = TOTAL_RECORD1;
    data['NitrateNitrogen'] = NitrateNitrogen;
    data['AmmonicalNitrogen'] = AmmonicalNitrogen;
    data['Copper'] = Copper;
    data['Chloride'] = Chloride;
    data['Sodium'] = Sodium;
    data['CalciumCarbonate'] = CalciumCarbonate;
    data['OrganicCarbon'] = OrganicCarbon;
    data['BiCarbonate'] = BiCarbonate;
    data['Carbonate'] = Carbonate;
    data['Mgca'] = Mgca;
    data['SAR'] = SAR;
    return data;
  }
}

class NutrientManagementModel {
/*
{
  "ResponseCode": "0",
  "ResponseMessage": "Report List",
  "Otp": null,
  "Static_Otp": null,
  "DATA": [
    {
      "RR_ID": 335,
      "Row": 1,
      "REPORT_ID": "2",
      "USER_ID": "19",
      "PLOT_ID": "224",
      "CROP_ID": "22",
      "LAB_NAME": "okok",
      "DESCRIPTION": "ok",
      "NITROGEN": 5,
      "PHOSFORUS": 5,
      "POTASIUM": 5,
      "CALSIUM": 5,
      "MAGNESIUM": 5,
      "SALPHUR": 5,
      "FEROUS": 5,
      "MANGNISE": 0,
      "ZINK": 5,
      "BORON": 5,
      "EC": 0,
      "PH": 0,
      "CARBON": 0,
      "MOLIBHEBAM": 5,
      "REPORT_PHOTO": "",
      "STATUS": "Active",
      "SAMPLE_DATE": "26/04/2023 ",
      "CHATANI_REPORT_DATE": "31/03/2023 ",
      "CROP_NAME": "उस",
      "REPORT_NAME": "Patoile Report",
      "REG_DATE": "26/04/2023 ",
      "TOTAL_RECORD": "<b>Chuna:</b>0 (किलो)\n \n <br> <b>Sulpher: </b>40 (किलो) \n <br> <b>Gypsum:</b> 0 (किलो)\n <br> <b>Phosphoric acid:</b> 5 (किलो)\n<br> <b>Sulfuric acid:</b> 1 (किलो)\n <br><b> Mulching:</b> Mulching\n<br> <b>Shen Khat:</b> 20 MT \n<br><b> बोनमिल / अँग्रीफीड:</b>500 (Kg) \n<br> <b>Urea:</b> 30 (किलो)\n <br> <b>DAP:</b> 60 (किलो)\n<br> <b>24:24:00 :</b> 50 (किलो)\n<br><b> Calcium nitrate:</b> 55 (किलो)\n<br> <b>Superphosphate:</b> 300 (किलो)\n<br> <b>12:61 :</b> 40 (किलो)\n<br> <b>0:52:34 : </b>30 (किलो)\n<br> <b>SOP:</b> 60 (किलो)\n <br><b>13:00:45 :</b> 40 (किलो)\n<br><b> 0:00:50 :</b> 100 (किलो) \n<br><b> Magnesium sulphate:</b>  70 (किलो) \n<br> <b>Ferrous sulfate:</b> 20 (किलो)\n<br><b> EDDHA Fe:</b> 2.5 (किलो)\n<br> <b>EDTA Fe:</b> 3 (किलो)\n<br><b> Zinc sulfate:</b> 10 (किलो)\n<br><b> Chi-Zink:</b> 1.5 (किलो)\n<br> <b>Boric Acid:</b> 0.5 (किलो)\n<br> <b>Chi-Boron:</b> 0.1 ग्रॅम \n<br>  <b>Manganese Sulphate:</b> 5 (किलो)\n <br><b>Chi-Manganese :</b> 3 (किलो)",
      "TOTAL_RECORD1": "<b><span style=color:#e74c3c><u>छाटणी अगोदर १५ दिवस :</u></span></b>  \n\n <br> <b>बोनोमील/ अग्रीफिड :</b> 500 (किलो)  ड्रीपखाली \n<br> <b>शेणखत :</b>  20 MT   ड्रीपखाली \n<br><b> Superphosphate: </b>300 (किलो ) ड्रीपखाली \n<br><b> Sulphur: </b>40 (किलो ) ड्रीपखाली \n<br> <b>DAP :</b> 15 (किलो ) ड्रीपखाली \n<br> <b>SOP :</b> 15 (किलो) ड्रीपखाली  \n<br> <b>Calcium Nitrate:</b> 11 (किलो) ड्रीपने  \n<br> <b>Chuna:</b> 0 (किलो) \n<br><b>Gypsum:</b> 0 (किलो) \n<br> <hr> <b><span style=color:#e74c3c><u>छाटणी ते ३० दिवस :</u></span></b> \n\n<br> <b>Magnesium Sulphate:</b> प्रत्येकी 11.67 किलो * ३ वेळा ड्रीपने \n<br> <b>Calcium Nitrate:</b> 16.5 (किलो) ड्रीपने \n<br><b> DAP:</b>  15 (किलो ) ड्रीपखाली \n<br> <b>युरिया :</b> 6  (किलो) ड्रीपने \n <br><b>Ferrous Sulphate:</b> 6 (किलो) ड्रीप ने \n<br><b> EDDHA  Ferrous:</b> 1.25 (किलो) ड्रीप ने \n<br><b> EDTA Ferrous:</b> 0.9 (किलो) ड्रीप ने \n<br><b> Zinc Sulphate:</b> 3 (किलो) ड्रीप ने \n<br> <b>Chi. Zinc:</b> 0.45 (किलो) ड्रीप ने \n<br><b> Boric Acide:</b> 0.15 (किलो) ड्रीप ने \n<br> <b>ची.बोरान :</b> 0.1 kg\n<br> <b> Manganese Sulphate:</b> 1.5 (किलो) ड्रीप ने \n<br> <b>Chi . Manganese:</b> 1Kg ड्रीप ने \n <br><hr> <b><span style=color:#e74c3c><u>३१ ते ६० दिवस :</u></span> </b>\n\n<br> <b>DAP :</b> 15 (किलो) ड्रीप खाली \n <br><b>१२.६१.० :</b>प्रत्येकी  10 किलो * 4 वेळा ड्रीप खाली  \n<br><b> 0.52.34 : </b> 15 (किलो) ड्रीप खाली \n<br><b> Calcium Nitrate:</b> 13.75 (किलो) ड्रीप ने \n<br> <b>Magnesium Sulphate:</b> 28 (किलो) ड्रीप ने \n<br><b> Ferrous Sulphate:</b> 10 (किलो) ड्रीप ने \n<br><b> EDDHA  Ferrous:</b> 1.25  (किलो) ड्रीप ने \n<br> <b>EDTA Ferrous:</b>1.5 (किलो)  ड्रीप ने \n<br><b> Zinc Sulphate: </b>5 ड्रीप ने \n <br><b>Chi. Zinc: </b>0.75 (किलो) ड्रीप ने \n<br> <b>Boric Acide:</b> 0.25 (किलो) ड्रीप ने \n<br><b> ची.बोरान :</b> 0.1 kg\n<br> <b>Manganese Sulphate:</b> 2.5 (किलो) ड्रीप ने \n<br><b> Chi . Manganese: </b>1.5 (किलो) ड्रीप ने \n <br><hr>  <b><span style=color:#e74c3c><u>६१  ते ९० दिवस :</u></span></b> \n\n<br> <b>SOP:</b> 15 (किलो) ड्रीप खाली \n<br> <b>DAP :</b> 15 (किलो) ड्रीप खाली \n<br> <b>शेंगदाणा पेंड  :</b> 500 (किलो) 100% \n <br><b>0.52.34 :</b>  15 (किलो) ड्रीप खाली \n<br> <b>13:00:45 :</b> प्रत्येकी 13.33 किलो * ३ वेळा \n<br> <b>Calcium Nitrate:</b> 13.75 (किलो) ड्रीप ने \n<br> <b>Magnesium Sulphate:</b> 7 (किलो) ड्रीप ने \n<br> <b>Ferrous Sulphate:</b> 4 (किलो) ड्रीप ने \n<br> <b>EDDHA  Ferrous:</b> 0.5 (किलो) ड्रीप ने \n<br> <b>EDTA Ferrous:</b>0.6 (किलो)  ड्रीप ने \n<br> <b>Zinc Sulphate:</b> 2 ड्रीप ने \n<br> <b>Chi. Zinc:</b> 0.3 (किलो) ड्रीप ने \n<br> <b>Boric Acide:</b> 0.1 (किलो) ड्रीप ने \n<br> <b>Manganese Sulphate:</b> 1 (किलो) ड्रीप ने \n<br> <b>Chi . Manganese:</b> 0.6 (किलो) ड्रीप ने \n<br><hr>  <b><span style=color:#e74c3c><u>९१  ते १२० दिवस :</u></span> </b>  \n\n <br><b>SOP:</b> 30 (किलो) ड्रीप खाली \n<br><b> 0:00:50 :</b>  प्रत्येकी 20 किलो * ५ वेळा <br>",
      "NitrateNitrogen": 0,
      "AmmonicalNitrogen": 0,
      "Copper": 0,
      "Chloride": 0,
      "Sodium": 0,
      "CalciumCarbonate": 0,
      "OrganicCarbon": 0,
      "BiCarbonate": 0,
      "Carbonate": 0,
      "Mgca": 0,
      "SAR": 0
    }
  ],
  "DATA1": [
    {
      "Column1": 1
    }
  ]
} 
*/

  String? ResponseCode;
  String? ResponseMessage;
  String? Otp;
  String? Static_Otp;
  List<NutrientManagementModelDATA?>? DATA;
  List<NutrientManagementModelDATA1?>? DATA1;

  NutrientManagementModel({
    this.ResponseCode,
    this.ResponseMessage,
    this.Otp,
    this.Static_Otp,
    this.DATA,
    this.DATA1,
  });
  NutrientManagementModel.fromJson(Map<String, dynamic> json) {
    ResponseCode = json['ResponseCode']?.toString();
    ResponseMessage = json['ResponseMessage']?.toString();
    Otp = json['Otp']?.toString();
    Static_Otp = json['Static_Otp']?.toString();
  if (json['DATA'] != null) {
  final v = json['DATA'];
  final arr0 = <NutrientManagementModelDATA>[];
  v.forEach((v) {
  arr0.add(NutrientManagementModelDATA.fromJson(v));
  });
    DATA = arr0;
    }
  if (json['DATA1'] != null) {
  final v = json['DATA1'];
  final arr0 = <NutrientManagementModelDATA1>[];
  v.forEach((v) {
  arr0.add(NutrientManagementModelDATA1.fromJson(v));
  });
    DATA1 = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['ResponseCode'] = ResponseCode;
    data['ResponseMessage'] = ResponseMessage;
    data['Otp'] = Otp;
    data['Static_Otp'] = Static_Otp;
    if (DATA != null) {
      final v = DATA;
      final arr0 = [];
  v!.forEach((v) {
  arr0.add(v!.toJson());
  });
      data['DATA'] = arr0;
    }
    if (DATA1 != null) {
      final v = DATA1;
      final arr0 = [];
  v!.forEach((v) {
  arr0.add(v!.toJson());
  });
      data['DATA1'] = arr0;
    }
    return data;
  }
}
