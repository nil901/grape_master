///
/// Code generated by Sita Web Tool https://sita.app/json-to-dart/
///
class PlotRagisterModelDATA1 {
/*
{
  "Column1": 1
} 
*/

  String? Column1;

  PlotRagisterModelDATA1({
    this.Column1,
  });
  PlotRagisterModelDATA1.fromJson(Map<String, dynamic> json) {
    Column1 = json['Column1']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['Column1'] = Column1;
    return data;
  }
}

class PlotRagisterModelDATA {
/*
{
  "Row": 1,
  "PLOT_ID": 31050,
  "CROP_ID": 29,
  "CROPVARIETY_ID": 266,
  "USER_ID": 19,
  "CROP_NAME": "मेथी",
  "CHATANI_TYPE": "मेथी लागवड",
  "V_NAME": "कश्मीरी",
  "ST_NAME": "काळी (मध्यम काळी)",
  "PLOT_NAME": "PLOT NO- 50",
  "NEW_PLOT_NAME": " 50",
  "SOWING_DATE": "19/08/2023 ",
  "PLOT_AREA": 2,
  "LATITUDE_1": null,
  "LONGITUDE_1": null,
  "LATITUDE_2": null,
  "LONGTUDE_2": null,
  "STATUS": "Deactive",
  "REG_DATE": "23/08/2023 ",
  "CHATANI_ID": 103,
  "WATER_SOURCE": null,
  "CROP_DISTANCE": "X",
  "PREVIOUS_YEAR_PROBLEM": null,
  "PLOT_SRUCTURE": null,
  "CULTIVATION_TYPE": null,
  "METHOD_OF_WATER": null,
  "EXPORT_LOCAL": "Local",
  "CROP_IMAGE": "http://cmadmin.cropmaster.in///Images/Crop66797375737204352023.jpg",
  "PACKAGE_STATUS": "Deactive",
  "REMAINING_DAY": 0,
  "EXPIRE_DATE": "21/10/2023",
  "ST_ID": 1,
  "EDIT_STATUS": "Yes",
  "BAHAR_ID": null,
  "BAHAR_NAME": null
} 
*/

  String? Row;
  String? PLOT_ID;
  String? CROP_ID;
  String? CROPVARIETY_ID;
  String? USER_ID;
  String? CROP_NAME;
  String? CHATANI_TYPE;
  String? V_NAME;
  String? ST_NAME;
  String? PLOT_NAME;
  String? NEW_PLOT_NAME;
  String? SOWING_DATE;
  String? PLOT_AREA;
  String? LATITUDE_1;
  String? LONGITUDE_1;
  String? LATITUDE_2;
  String? LONGTUDE_2;
  String? STATUS;
  String? REG_DATE;
  String? CHATANI_ID;
  String? WATER_SOURCE;
  String? CROP_DISTANCE;
  String? PREVIOUS_YEAR_PROBLEM;
  String? PLOT_SRUCTURE;
  String? CULTIVATION_TYPE;
  String? METHOD_OF_WATER;
  String? EXPORT_LOCAL;
  String? CROP_IMAGE;
  String? PACKAGE_NAME;
  String? PACKAGE_STATUS;
  String? REMAINING_DAY;
  String? EXPIRE_DATE;
  String? ST_ID;
  String? EDIT_STATUS;
  String? BAHAR_ID;
  String? BAHAR_NAME;

  PlotRagisterModelDATA(
      {this.Row,
      this.PLOT_ID,
      this.CROP_ID,
      this.CROPVARIETY_ID,
      this.USER_ID,
      this.CROP_NAME,
      this.CHATANI_TYPE,
      this.V_NAME,
      this.ST_NAME,
      this.PLOT_NAME,
      this.NEW_PLOT_NAME,
      this.SOWING_DATE,
      this.PLOT_AREA,
      this.LATITUDE_1,
      this.LONGITUDE_1,
      this.LATITUDE_2,
      this.LONGTUDE_2,
      this.STATUS,
      this.REG_DATE,
      this.CHATANI_ID,
      this.WATER_SOURCE,
      this.CROP_DISTANCE,
      this.PREVIOUS_YEAR_PROBLEM,
      this.PLOT_SRUCTURE,
      this.CULTIVATION_TYPE,
      this.METHOD_OF_WATER,
      this.EXPORT_LOCAL,
      this.CROP_IMAGE,
      this.PACKAGE_STATUS,
      this.REMAINING_DAY,
      this.EXPIRE_DATE,
      this.ST_ID,
      this.EDIT_STATUS,
      this.BAHAR_ID,
      this.BAHAR_NAME,
      this.PACKAGE_NAME});
  PlotRagisterModelDATA.fromJson(Map<String, dynamic> json) {
    Row = json['Row']?.toString();
    PLOT_ID = json['PLOT_ID']?.toString();
    CROP_ID = json['CROP_ID']?.toString();
    CROPVARIETY_ID = json['CROPVARIETY_ID']?.toString();
    USER_ID = json['USER_ID']?.toString();
    CROP_NAME = json['CROP_NAME']?.toString();
    CHATANI_TYPE = json['CHATANI_TYPE']?.toString();
    V_NAME = json['V_NAME']?.toString();
    ST_NAME = json['ST_NAME']?.toString();
    PLOT_NAME = json['PLOT_NAME']?.toString();
    NEW_PLOT_NAME = json['NEW_PLOT_NAME']?.toString();
    SOWING_DATE = json['SOWING_DATE']?.toString();
    PLOT_AREA = json['PLOT_AREA']?.toString();
    LATITUDE_1 = json['LATITUDE_1']?.toString();
    LONGITUDE_1 = json['LONGITUDE_1']?.toString();
    LATITUDE_2 = json['LATITUDE_2']?.toString();
    LONGTUDE_2 = json['LONGTUDE_2']?.toString();
    STATUS = json['STATUS']?.toString();
    REG_DATE = json['REG_DATE']?.toString();
    CHATANI_ID = json['CHATANI_ID']?.toString();
    WATER_SOURCE = json['WATER_SOURCE']?.toString();
    CROP_DISTANCE = json['CROP_DISTANCE']?.toString();
    PREVIOUS_YEAR_PROBLEM = json['PREVIOUS_YEAR_PROBLEM']?.toString();
    PLOT_SRUCTURE = json['PLOT_SRUCTURE']?.toString();
    CULTIVATION_TYPE = json['CULTIVATION_TYPE']?.toString();
    METHOD_OF_WATER = json['METHOD_OF_WATER']?.toString();
    EXPORT_LOCAL = json['EXPORT_LOCAL']?.toString();
    PACKAGE_NAME = json['PACKAGE_NAME']?.toString();
    CROP_IMAGE = json['CROP_IMAGE']?.toString();
    PACKAGE_STATUS = json['PACKAGE_STATUS']?.toString();
    REMAINING_DAY = json['REMAINING_DAY']?.toString();
    EXPIRE_DATE = json['EXPIRE_DATE']?.toString();
    ST_ID = json['ST_ID']?.toString();
    EDIT_STATUS = json['EDIT_STATUS']?.toString();
    BAHAR_ID = json['BAHAR_ID']?.toString();
    BAHAR_NAME = json['BAHAR_NAME']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['Row'] = Row;
    data['PLOT_ID'] = PLOT_ID;
    data['CROP_ID'] = CROP_ID;
    data['CROPVARIETY_ID'] = CROPVARIETY_ID;
    data['USER_ID'] = USER_ID;
    data['CROP_NAME'] = CROP_NAME;
    data['CHATANI_TYPE'] = CHATANI_TYPE;
    data['V_NAME'] = V_NAME;
    data['ST_NAME'] = ST_NAME;
    data['PLOT_NAME'] = PLOT_NAME;
    data['NEW_PLOT_NAME'] = NEW_PLOT_NAME;
    data['SOWING_DATE'] = SOWING_DATE;
    data['PLOT_AREA'] = PLOT_AREA;
    data['LATITUDE_1'] = LATITUDE_1;
    data['LONGITUDE_1'] = LONGITUDE_1;
    data['LATITUDE_2'] = LATITUDE_2;
    data['LONGTUDE_2'] = LONGTUDE_2;
    data['STATUS'] = STATUS;
    data['REG_DATE'] = REG_DATE;
    data['CHATANI_ID'] = CHATANI_ID;
    data['WATER_SOURCE'] = WATER_SOURCE;
    data['CROP_DISTANCE'] = CROP_DISTANCE;
    data['PREVIOUS_YEAR_PROBLEM'] = PREVIOUS_YEAR_PROBLEM;
    data['PLOT_SRUCTURE'] = PLOT_SRUCTURE;
    data['CULTIVATION_TYPE'] = CULTIVATION_TYPE;
    data['METHOD_OF_WATER'] = METHOD_OF_WATER;
    data['EXPORT_LOCAL'] = EXPORT_LOCAL;
    data['PACKAGE_NAME'] = PACKAGE_NAME;
    data['CROP_IMAGE'] = CROP_IMAGE;
    data['PACKAGE_STATUS'] = PACKAGE_STATUS;
    data['REMAINING_DAY'] = REMAINING_DAY;
    data['EXPIRE_DATE'] = EXPIRE_DATE;
    data['ST_ID'] = ST_ID;
    data['EDIT_STATUS'] = EDIT_STATUS;
    data['BAHAR_ID'] = BAHAR_ID;
    data['BAHAR_NAME'] = BAHAR_NAME;
    return data;
  }
}

class PlotRagisterModel {
/*
{
  "ResponseCode": "0",
  "ResponseMessage": "Plot List",
  "Otp": null,
  "Static_Otp": null,
  "DATA": [
    {
      "Row": 1,
      "PLOT_ID": 31050,
      "CROP_ID": 29,
      "CROPVARIETY_ID": 266,
      "USER_ID": 19,
      "CROP_NAME": "मेथी",
      "CHATANI_TYPE": "मेथी लागवड",
      "V_NAME": "कश्मीरी",
      "ST_NAME": "काळी (मध्यम काळी)",
      "PLOT_NAME": "PLOT NO- 50",
      "NEW_PLOT_NAME": " 50",
      "SOWING_DATE": "19/08/2023 ",
      "PLOT_AREA": 2,
      "LATITUDE_1": null,
      "LONGITUDE_1": null,
      "LATITUDE_2": null,
      "LONGTUDE_2": null,
      "STATUS": "Deactive",
      "REG_DATE": "23/08/2023 ",
      "CHATANI_ID": 103,
      "WATER_SOURCE": null,
      "CROP_DISTANCE": "X",
      "PREVIOUS_YEAR_PROBLEM": null,
      "PLOT_SRUCTURE": null,
      "CULTIVATION_TYPE": null,
      "METHOD_OF_WATER": null,
      "EXPORT_LOCAL": "Local",
      "CROP_IMAGE": "http://cmadmin.cropmaster.in///Images/Crop66797375737204352023.jpg",
      "PACKAGE_STATUS": "Deactive",
      "REMAINING_DAY": 0,
      "EXPIRE_DATE": "21/10/2023",
      "ST_ID": 1,
      "EDIT_STATUS": "Yes",
      "BAHAR_ID": null,
      "BAHAR_NAME": null
    }
  ],
  "DATA1": [
    {
      "Column1": 1
    }
  ]
} 
*/

  String? ResponseCode;
  String? ResponseMessage;
  String? Otp;
  String? Static_Otp;
  List<PlotRagisterModelDATA?>? DATA;
  List<PlotRagisterModelDATA1?>? DATA1;

  PlotRagisterModel({
    this.ResponseCode,
    this.ResponseMessage,
    this.Otp,
    this.Static_Otp,
    this.DATA,
    this.DATA1,
  });
  PlotRagisterModel.fromJson(Map<String, dynamic> json) {
    ResponseCode = json['ResponseCode']?.toString();
    ResponseMessage = json['ResponseMessage']?.toString();
    Otp = json['Otp']?.toString();
    Static_Otp = json['Static_Otp']?.toString();
    if (json['DATA'] != null) {
      final v = json['DATA'];
      final arr0 = <PlotRagisterModelDATA>[];
      v.forEach((v) {
        arr0.add(PlotRagisterModelDATA.fromJson(v));
      });
      DATA = arr0;
    }
    if (json['DATA1'] != null) {
      final v = json['DATA1'];
      final arr0 = <PlotRagisterModelDATA1>[];
      v.forEach((v) {
        arr0.add(PlotRagisterModelDATA1.fromJson(v));
      });
      DATA1 = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['ResponseCode'] = ResponseCode;
    data['ResponseMessage'] = ResponseMessage;
    data['Otp'] = Otp;
    data['Static_Otp'] = Static_Otp;
    if (DATA != null) {
      final v = DATA;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['DATA'] = arr0;
    }
    if (DATA1 != null) {
      final v = DATA1;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['DATA1'] = arr0;
    }
    return data;
  }
}
